"""init db

Revision ID: 39bb109b75c3
Revises: 
Create Date: 2024-01-23 15:39:14.596422

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '39bb109b75c3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('illnesses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('reason', sa.String(length=1024), nullable=False),
    sa.Column('symptoms', sa.String(length=1024), nullable=False),
    sa.Column('treatment', sa.String(length=1024), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_illnesses'))
    )
    with op.batch_alter_table('illnesses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_illnesses_name'), ['name'], unique=True)

    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(length=256), nullable=False),
    sa.Column('region', sa.String(length=256), nullable=False),
    sa.Column('city', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_locations'))
    )
    with op.batch_alter_table('locations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_locations_city'), ['city'], unique=False)
        batch_op.create_index(batch_op.f('ix_locations_country'), ['country'], unique=False)

    op.create_table('pests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('symptoms', sa.String(length=1024), nullable=False),
    sa.Column('treatment', sa.String(length=1024), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_pests'))
    )
    with op.batch_alter_table('pests', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pests_name'), ['name'], unique=True)

    op.create_table('photos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('url_path', sa.String(length=512), nullable=False),
    sa.Column('original_name', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_photos'))
    )
    op.create_table('plant_families',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('features', sa.String(length=1024), nullable=False),
    sa.Column('type_of', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_plant_families'))
    )
    with op.batch_alter_table('plant_families', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_plant_families_name'), ['name'], unique=True)

    op.create_table('planting_step_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_planting_step_types'))
    )
    with op.batch_alter_table('planting_step_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_planting_step_types_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_planting_step_types_uuid'), ['uuid'], unique=False)

    op.create_table('recipes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('cooking_time', sa.Integer(), nullable=False),
    sa.Column('additional_ingredients', sa.String(length=1024), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recipes'))
    )
    with op.batch_alter_table('recipes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_recipes_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_recipes_uuid'), ['uuid'], unique=False)

    op.create_table('illness_photos',
    sa.Column('illness_id', sa.Integer(), nullable=False),
    sa.Column('photo_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['illness_id'], ['illnesses.id'], name=op.f('fk_illness_photos_illness_id_illnesses')),
    sa.ForeignKeyConstraint(['photo_id'], ['photos.id'], name=op.f('fk_illness_photos_photo_id_photos')),
    sa.PrimaryKeyConstraint('illness_id', 'photo_id', name=op.f('pk_illness_photos'))
    )
    op.create_table('pest_photos',
    sa.Column('pest_id', sa.Integer(), nullable=False),
    sa.Column('photo_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['pest_id'], ['pests.id'], name=op.f('fk_pest_photos_pest_id_pests')),
    sa.ForeignKeyConstraint(['photo_id'], ['photos.id'], name=op.f('fk_pest_photos_photo_id_photos')),
    sa.PrimaryKeyConstraint('pest_id', 'photo_id', name=op.f('pk_pest_photos'))
    )
    op.create_table('plant_family_illnesses',
    sa.Column('plant_family_id', sa.Integer(), nullable=False),
    sa.Column('illness_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['illness_id'], ['illnesses.id'], name=op.f('fk_plant_family_illnesses_illness_id_illnesses')),
    sa.ForeignKeyConstraint(['plant_family_id'], ['plant_families.id'], name=op.f('fk_plant_family_illnesses_plant_family_id_plant_families')),
    sa.PrimaryKeyConstraint('plant_family_id', 'illness_id', name=op.f('pk_plant_family_illnesses'))
    )
    op.create_table('plant_family_pests',
    sa.Column('plant_family_id', sa.Integer(), nullable=False),
    sa.Column('pest_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['pest_id'], ['pests.id'], name=op.f('fk_plant_family_pests_pest_id_pests')),
    sa.ForeignKeyConstraint(['plant_family_id'], ['plant_families.id'], name=op.f('fk_plant_family_pests_plant_family_id_plant_families')),
    sa.PrimaryKeyConstraint('plant_family_id', 'pest_id', name=op.f('pk_plant_family_pests'))
    )
    op.create_table('plant_family_recipes',
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('plant_family_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['plant_family_id'], ['plant_families.id'], name=op.f('fk_plant_family_recipes_plant_family_id_plant_families')),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name=op.f('fk_plant_family_recipes_recipe_id_recipes')),
    sa.PrimaryKeyConstraint('recipe_id', 'plant_family_id', name=op.f('pk_plant_family_recipes'))
    )
    op.create_table('plant_varieties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plant_family_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('features', sa.String(length=1024), nullable=False),
    sa.Column('general_info', sa.String(length=2048), nullable=False),
    sa.Column('temperature_info', sa.String(length=2048), nullable=False),
    sa.Column('watering_info', sa.String(length=2048), nullable=False),
    sa.Column('min_temperature', sa.Float(), nullable=True),
    sa.Column('max_temperature', sa.Float(), nullable=True),
    sa.Column('min_size', sa.Float(), nullable=False),
    sa.Column('max_size', sa.Float(), nullable=False),
    sa.Column('humidity_percentage', sa.Float(), nullable=False),
    sa.Column('water_volume', sa.Float(), nullable=False),
    sa.Column('care_type', sa.String(length=64), nullable=False),
    sa.Column('is_moisture_loving', sa.Boolean(), nullable=False),
    sa.Column('is_sun_loving', sa.Boolean(), nullable=False),
    sa.Column('ground_ph', sa.Float(), nullable=True),
    sa.Column('ground_type', sa.String(length=256), nullable=False),
    sa.Column('can_plant_indoors', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['plant_family_id'], ['plant_families.id'], name=op.f('fk_plant_varieties_plant_family_id_plant_families')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_plant_varieties'))
    )
    with op.batch_alter_table('plant_varieties', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_plant_varieties_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_plant_varieties_uuid'), ['uuid'], unique=False)

    op.create_table('recipe_photos',
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('photo_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['photo_id'], ['photos.id'], name=op.f('fk_recipe_photos_photo_id_photos')),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name=op.f('fk_recipe_photos_recipe_id_recipes')),
    sa.PrimaryKeyConstraint('recipe_id', 'photo_id', name=op.f('pk_recipe_photos'))
    )
    op.create_table('recipe_steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('step_number', sa.Integer(), nullable=False),
    sa.Column('instruction', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name=op.f('fk_recipe_steps_recipe_id_recipes')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recipe_steps'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('activated', sa.Boolean(), nullable=False),
    sa.Column('google_id', sa.String(length=256), nullable=False),
    sa.Column('apple_id', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('unique_id', sa.String(length=36), nullable=False),
    sa.Column('reset_password_uid', sa.String(length=64), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('role', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name=op.f('fk_users_location_id_locations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('feedbacks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plant_variety_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=512), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['plant_variety_id'], ['plant_varieties.id'], name=op.f('fk_feedbacks_plant_variety_id_plant_varieties')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_feedbacks_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_feedbacks'))
    )
    op.create_table('plant_variety_illnesses',
    sa.Column('plant_variety_id', sa.Integer(), nullable=False),
    sa.Column('illness_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['illness_id'], ['illnesses.id'], name=op.f('fk_plant_variety_illnesses_illness_id_illnesses')),
    sa.ForeignKeyConstraint(['plant_variety_id'], ['plant_varieties.id'], name=op.f('fk_plant_variety_illnesses_plant_variety_id_plant_varieties')),
    sa.PrimaryKeyConstraint('plant_variety_id', 'illness_id', name=op.f('pk_plant_variety_illnesses'))
    )
    op.create_table('plant_variety_pests',
    sa.Column('plant_variety_id', sa.Integer(), nullable=False),
    sa.Column('pest_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['pest_id'], ['pests.id'], name=op.f('fk_plant_variety_pests_pest_id_pests')),
    sa.ForeignKeyConstraint(['plant_variety_id'], ['plant_varieties.id'], name=op.f('fk_plant_variety_pests_plant_variety_id_plant_varieties')),
    sa.PrimaryKeyConstraint('plant_variety_id', 'pest_id', name=op.f('pk_plant_variety_pests'))
    )
    op.create_table('plant_variety_photos',
    sa.Column('plant_variety_photo_id', sa.Integer(), nullable=False),
    sa.Column('photo_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['photo_id'], ['photos.id'], name=op.f('fk_plant_variety_photos_photo_id_photos')),
    sa.ForeignKeyConstraint(['plant_variety_photo_id'], ['plant_varieties.id'], name=op.f('fk_plant_variety_photos_plant_variety_photo_id_plant_varieties')),
    sa.PrimaryKeyConstraint('plant_variety_photo_id', 'photo_id', name=op.f('pk_plant_variety_photos'))
    )
    op.create_table('plant_variety_recipe',
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('plant_variety_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['plant_variety_id'], ['plant_varieties.id'], name=op.f('fk_plant_variety_recipe_plant_variety_id_plant_varieties')),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name=op.f('fk_plant_variety_recipe_recipe_id_recipes')),
    sa.PrimaryKeyConstraint('recipe_id', 'plant_variety_id', name=op.f('pk_plant_variety_recipe'))
    )
    op.create_table('planting_programs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plant_variety_id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('planting_time', sa.Integer(), nullable=False),
    sa.Column('harvest_time', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['plant_variety_id'], ['plant_varieties.id'], name=op.f('fk_planting_programs_plant_variety_id_plant_varieties')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_planting_programs'))
    )
    with op.batch_alter_table('planting_programs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_planting_programs_uuid'), ['uuid'], unique=False)

    op.create_table('planting_steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('planting_program_id', sa.Integer(), nullable=False),
    sa.Column('step_type_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('day', sa.Integer(), nullable=False),
    sa.Column('instruction', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['planting_program_id'], ['planting_programs.id'], name=op.f('fk_planting_steps_planting_program_id_planting_programs')),
    sa.ForeignKeyConstraint(['step_type_id'], ['planting_step_types.id'], name=op.f('fk_planting_steps_step_type_id_planting_step_types')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_planting_steps'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('planting_steps')
    with op.batch_alter_table('planting_programs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_planting_programs_uuid'))

    op.drop_table('planting_programs')
    op.drop_table('plant_variety_recipe')
    op.drop_table('plant_variety_photos')
    op.drop_table('plant_variety_pests')
    op.drop_table('plant_variety_illnesses')
    op.drop_table('feedbacks')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('recipe_steps')
    op.drop_table('recipe_photos')
    with op.batch_alter_table('plant_varieties', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_plant_varieties_uuid'))
        batch_op.drop_index(batch_op.f('ix_plant_varieties_name'))

    op.drop_table('plant_varieties')
    op.drop_table('plant_family_recipes')
    op.drop_table('plant_family_pests')
    op.drop_table('plant_family_illnesses')
    op.drop_table('pest_photos')
    op.drop_table('illness_photos')
    with op.batch_alter_table('recipes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_recipes_uuid'))
        batch_op.drop_index(batch_op.f('ix_recipes_name'))

    op.drop_table('recipes')
    with op.batch_alter_table('planting_step_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_planting_step_types_uuid'))
        batch_op.drop_index(batch_op.f('ix_planting_step_types_name'))

    op.drop_table('planting_step_types')
    with op.batch_alter_table('plant_families', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_plant_families_name'))

    op.drop_table('plant_families')
    op.drop_table('photos')
    with op.batch_alter_table('pests', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pests_name'))

    op.drop_table('pests')
    with op.batch_alter_table('locations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_locations_country'))
        batch_op.drop_index(batch_op.f('ix_locations_city'))

    op.drop_table('locations')
    with op.batch_alter_table('illnesses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_illnesses_name'))

    op.drop_table('illnesses')
    # ### end Alembic commands ###
