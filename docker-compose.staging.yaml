version: "3.8"

services:
  db:
    image: postgres:14
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-passwd}
      POSTGRES_DB: db
      PGDATABASE: db
      PGPASSWORD: ${POSTGRES_PASSWORD:-passwd}
      PGUSER: ${POSTGRES_USER:-postgres}

  app:
    image: simple2b/zrosty-hay:0.1.9
    restart: always
    command: sh ./start_web.sh
    environment:
      APP_ENV: production
      ALCHEMICAL_DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-passwd}@db:5432/db
    env_file:
      - .env
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zrosty_portal.rule=Host(`zrosty-hay.simple2b.net`)"
      - "traefik.http.routers.zrosty_portal.tls=true"
      - "traefik.http.routers.zrosty_portal.tls.certresolver=myresolver"

  api:
    image: simple2b/zrosty-hay:0.1.9
    restart: always
    command: sh ./start_api.sh
    environment:
      APP_ENV: production
      IS_API: "true"
      ALCHEMICAL_DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-passwd}@db:5432/db
    env_file:
      - .env
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zrosty_api.rule=Host(`api.zrosty-hay.simple2b.net`)"
      - "traefik.http.routers.zrosty_api.tls=true"
      - "traefik.http.routers.zrosty_api.tls.certresolver=myresolver"

volumes:
  db_data:
